<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fpc.Mapping.orderMapper">

	<!-- 根据id查询到一个order对象，使用这个查询是查询不到我们想要的结果的，
	这个主要是因为实体类的属性名和数据库的字段名对应不上的原因，因此无法查询出对应的记录 -->
	<select id="getOrderById" parameterType="int" resultType="com.fpc.Entity.Order">
		select * from orders where order_id=#{id}
	</select>
	
	<!-- 根据id查询得到一个order对象，使用这个查询是可以正常查询到我们想要的结果的，这是因为我们将查询的字段都起了一个合实体类属性名相同的别名，
	这样实体类的属性名和查询结果中的 字段名就可以一一对上-->
	<select id="selectOrderById" parameterType="int" resultType="com.fpc.Entity.Order">
		select order_id id,order_no orderNo,order_price orderPrice from orders where order_id=#{id}
	</select>
	
	<!--根据id查询得到一个order对象，使用这个查询是可以正常查询我们想要的结果的，
	这是因为我们通过<resultMap>映射实体类属性名和表的字段名一一对应关系 
	 -->
	 <select id="selectOrderResultMap" parameterType="int"  resultMap="orderResultMap">
	 	select * from orders where order_id=#{id}
	 </select>
	 
	 
	 <resultMap type="com.fpc.Entity.Order" id="orderResultMap">
	 	<!-- 用id属性来映射主键字段 -->
	 	<id property="id" column="order_id"/>
	 	
	 	<!-- 用result属性来映射非主键字段 -->
	 	<result property="orderNo" column="order_no"/>
	 	<result property="orderPrice" column="order_price"/>
	 </resultMap>
</mapper>